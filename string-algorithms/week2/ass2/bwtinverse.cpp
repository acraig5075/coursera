#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <cassert>
#include <map>

using std::cin;
using std::cout;
using std::string;
using std::vector;
using std::stringstream;
using std::map;
using std::pair;

string nena =         "YouandIandalittletoyshopBuyabagofballoonswiththemoneywevegotSetthemfreeatthebreakofdawnTilonebyonetheyweregoneBackatbasebugsinthesoftwareFlashthemessageSomethingsoutthereFloatinginthesummerskyNinetynineredballoonsgobyNinetynineredballoonsFloatinginthesummerskyPanicladsitsaredalertTheressomethingherefromsomewhereelseThewarmachinespringstolifeOpensuponeeagereyeFocusingitontheskyNinetynineredballoonsgobyNinetynineDecisionStreetNinetynineministersmeetToworryworrysuperscurryCallthetroopsoutinahurryThisiswhatwevewaitingforThisisitboysthisiswarThePresidentisonthelineAsninetynineredballoonsgobyNinetynineknightsoftheairRidingsuperhightechjetfightersEveryonesasuperheroEveryonesaCaptainKirkWithorderstoidentifytoclarifyandclassifyScramblinginthesummerskyAsninetynineredballoonsgobyNinetynineredballoonsgobyNinetyninedreamsIhavehadEveryonearedballoonNowitsalloverandImstandinprettyInthisdustthatwasacityIfIcouldfindasouvenirJusttoprovetheworldwashereAndhereisaredballoonIthinkofyouandletitgo$";
string nena_inverse = "oeeyepyaedoseesedfysdynrnyyytyyyyneyerytenrteryntk$symsBhlsebnteweddbbbbbbbbbsCreurIytuPCwwsselwwbwldlskooehhhdaddddddddftmteeoooooeaeeaaiodISsoannennfeeeeeeeeniirlninneaslrnnnrryfhgsehrrnehsntDrrrrrrrrrnnrrrmrrvvrnhehhnhvpddvhhnnnnnnhhwhhgpphtpmmmtdlvvvnnrhhnmrhhheejvnmmllhSrnnnnnnnnnnwwvhmhrhnIooitdgmeooiioiaanniiinnnntsssssaeeunnnetwITttttttstwgdTrttttttTttrcttttTtTcstggstganosRlsrthfnTatflnnnnnnnnnnhNNNNNNNnNnthlttshrdmhdsgggsnaKehchhhstnssstWwagwslchrceanssssccFcuradtoebaaaaaaaaaaaaFFillllllllllelrasmmmeoooeeuuueaoIoioowiaaaiaAaaioiooioiiiiiiiiooioiiiiiiiiiioiiiiiiiiiakyyyyyyyyyysseiiiooooooeoooiiiiIeegrllgggggtFgksskttsSsrooigylpyyymooooooostlllllllllrhtofhwwwgYycssslrNTtboOuuuunsooaiiaoceoeaebdaaaeeeeeefeteeePepeeeapioaeftpuuooeeeeeeeerreeerrrnmeasttierilannnnnayaesugiiiiidrerrrAAtesmipgaeeaemiyrguueeeagyniineorepsaihhseitftnhthtnnnnnleeeeInsiinuiaanetyssiteSeiihsaeuisefaaiteeeeeeeeeeoobossssssschcdJoooBeauoEEEoeestetdyytsesoaeyokrttbbbbkbkkfrufettttttttttrrrbfoorfeer\n";
string seus =         "OhthePlacesYoullGobyDrSeussCongratulationsTodayisyourdayYoureofftoGreatPlacesYoureoffandawayYouhavebrainsinyourheadYouhavefeetinyourshoesYoucansteeryourselfanydirectionyouchooseYoureonyourownAndyouknowwhatyouknowAndYOUaretheguywholldecidewheretogoYoulllookupanddownstreetsLookemoverwithcareAboutsomeyouwillsayIdontchoosetogothereWithyourheadfullofbrainsandyourshoesfulloffeetyouretoosmarttogodownanynotsogoodstreetAndyoumaynotfindanyyoullwanttogodownInthatcaseofcourseyoullheadstraightoutoftownItsopenerthereinthewideopenairOuttherethingscanhappenandfrequentlydotopeopleasbrainyandfootsyasyouAndwhenthingsstarttohappendontworryDontstewJustgorightalongYoullstarthappeningtooOHTHEPLACESYOULLGOYoullbeonyourwayupYoullbeseeinggreatsightsYoulljointhehighflierswhosoartohighheightsYouwontlagbehindbecauseyoullhavethespeedYoullpassthewholegangandyoullsoontaketheleadWhereveryouflyyoullbethebestofthebestWhereveryougoyouwilltopalltherestExceptwhenyoudontBecausesometimesyouwontImsorrytosaysobutsadlyitstrueandHangupscanhappentoyouYoucangetallhungupinapricklelyperchAndyourgangwillflyonYoullbeleftinaLurchYoullcomedownfromtheLurchwithanunpleasantbumpAndthechancesarethenthatyoullbeinaSlumpAndwhenyoureinaSlumpyourenotinformuchfunUnslumpingyourselfisnoteasilydoneYouwillcometoaplacewherethestreetsarenotmarkedSomewindowsarelightedButmostlytheyredarkedAplaceyoucouldsprainbothyourelbowandchinDoyoudaretostayoutDoyoudaretogoinHowmuchcanyouloseHowmuchcanyouwinAndIFyougoinshouldyouturnleftorrightorrightandthreequartersOrmaybenotquiteOrgoaroundbackandsneakinfrombehindSimpleitsnotImafraidyouwillfindforamindmakeruppertomakeuphismindYoucangetsoconfusedthatyoullstartintoracedownlongwiggledroadsatabreakneckingpaceandgrindonformilesacrossweirdishwildspaceheadedIfeartowardamostuselessplaceTheWaitingPlaceforpeoplejustwaitingWaitingforatraintogoorabustocomeoraplanetogoorthemailtocomeortheraintogoorthephonetoringorthesnowtosnoworwaitingaroundforaYesoraNoorwaitingfortheirhairtogrowEveryoneisjustwaitingWaitingforthefishtobiteorwaitingforwindtoflyakiteorwaitingaroundforFridaynightorwaitingperhapsfortheirUncleJakeorapottoboiloraBetterBreakorastringofpearlsorapairofpantsorawigwithcurlsorAnotherChanceEveryoneisjustwaitingNOThatsnotforyouSomehowyoullescapeallthatwaitingandstayingYoullfindthebrightplaceswhereBoomBandsareplayingWithbannerflipflappingoncemoreyoullridehighReadyforanythingundertheskyReadybecauseyourethatkindofaguyOhtheplacesyoullgoThereisfuntobedoneTherearepointstobescoredtherearegamestobewonAndthemagicalthingsyoucandowiththatballwillmakeyouthewinningestwinnerofallFameYoullbefamousasfamouscanbewiththewholewideworldwatchingyouwinonTVExceptwhentheydontBecausesometimestheywontImafraidthatsometimesyoullplaylonelygamestooGamesyoucantwincauseyoullplayagainstyouAllAloneWhetheryoulikeitornotAlonewillbesomethingyoullbequitealotAndwhenyourealonetheresaverygoodchanceyoullmeetthingsthatscareyourightoutofyourpantsTherearesomedowntheroadbetweenhitherandyonthatcanscareyousomuchyouwontwanttogoonButonyouwillgothoughtheweatherbefoulOnyouwillgothoughyourenemiesprowlOnyouwillgothoughtheHakkenKrakshowlOnwardupmanyafrighteningcreekthoughyourarmsmaygetsoreandyoursneakersmayleakOnandonyouwillhikeandIknowyoullhikefarandfaceuptoyourproblemswhatevertheyareYoullgetmixedupofcourseasyoualreadyknowYoullgetmixedupwithmanystrangebirdsasyougoSobesurewhenyoustepStepwithcareandgreattactandrememberthatLifesaGreatBalancingActJustneverforgettobedexterousanddeftAndnevermixupyourrightfootwithyourleftAndwillyousucceedYesYouwillindeed98and34percentguaranteedKIDYOULLMOVEMOUNTAINSS$";
string seus_inverse = "Sd39dLTegultnwtpnutptnthrdtmttaerdnArsIytnyVHCewVtlrILolaoTOedneKdAyddtttnnewtdnPLUULtsaeELgIUaoNYYMYMG$yklllesrEgetyhSNErdaaoudpNHnOeesosOOOOrnOTeggdtegeSDddaudsydsenOphgewsodgsyeessrsnrnnrtrlprlpllllfllbsteeoeesoeeeemmyylmfrrrmrrrgrrrnphwWwwwwwWWwwweJemtmmeyHeerBftepbeteucFggGrdffchhhl8eefwspryneenctBkgtrgselgrccHgccbccsrppwwchmfnccmrdrcorrhhhhlnhfuwwcycessseeUsddccdmerogguttoemteecsepryeseheshhhwhelhrhehherhhhhccccchhshdrswdlmmltdmldmtswdthdyoolrmgllyllmolleeoldnoeooonAlfesaetaooisuuusstuuhhshhssteeeneunaaacaanrxxaanaaaaanrreduuudtutruenaeinloolosuffgaAaehneeenneneneanenaernuuenroinnaonnnlandiiniiennnnnnannyrannneynyuInnynooeedennenranllnaoiennnennreelnnnnaaannnnnnnlirrchslhthcnhnrmrsnlhhhhRRrlnnrrprtukrcrrrrpflltsrrwrrhhgvhBBbbhdnrektdekeerbbmcmlsrxxdtcpsrwrtrfrrmfbkvhcbdlllrlhcdhbbmhbrerhwhrnnkllerhbsssrnlhhmrncklkppprpetprrbchhhuphhhhsrrrbdppmkmttthhrrccterbthhhhpphhhhhhhhhhhhhhnvpvhnttkibndvpkvvvvvvheoccYflcrlbbohhrbssYhilrbmmbmhgbcmcmmegrbrkrnhvrrmmmmeggmrrnsrnreeggBegbekcSnntrrthrcdhhhlnmhbbddhhcsscsrsrrkmhhdooesfleoooIefioootllelphroludtdddygrnnegsggteooaadanneeoefeodshsnonnnnnnnnaeynnernnannnnllnyrnnnniniiiiiiiiuuiiiiiiiuuaguloroonounyoooootnolllunnngddonnnnntnnnaenninnncgcrCcctnotnrttttwttTttwttuultccttttttTrerlttttttthttttttwwwwwwttttttwttTTtTttwtwWWttttttWtttttttttgcgeeollceettttttcpntsswwwpccwttttssetgggggtgOOgtsggggggglscgtgttcgrrrwcwaalmLwhhhrrlrrrnarrsewhhlwmwwwwwwwwwwwwwoastttSwhoteepawhmfhlfmkrwfwtkcttttyytttnntttterprkthhhhnhhphwwwaoaaoeaatoastttlaeebdeaaefdeehfyuukbwWwwwhwwwWwaaaaaaaaaaaaeeymmmlsesacirriiokaaaaaatacaacauyuIaaeoslllwwupPPPpppptapfupppllllllllellliuruceyppgrenoppkbileoellellllllllllllfeulflAauuuuuuuiuuiouiuiuuuiiiuuiuaiuuiuuuluuuuiuuuaaiuaillllAyaAanliualllalllrrllllailSsSllfitedfletfoIIeedolphtsrssuoeaooloeooiaaaiioooooooersattretaaaeuuuiurIeowwroiowoiiwweouoiiieeOwiaiiaoaaaUaaAaiAiiauiaaaiuaauuiaaaiAiieaaiaaaaiAAaiAAAAaAaAAaaooosskoooenneoaotdooiiwoiiiiiiioiaiiiaiaaiiiiiiiiiioiiiiiiuaoaiiiaaeyenerwaiiirssysAeeeykksskkuoiaiiUawioooooaoaeoIeiwieeoeuiiieaaoiaaoaoaOaiaaoeaeeioioeOoOoaaaaotogggrrtgstttSttrtsGttsToggohhdrlpeeletrgtttttttsttttttttbggjpoohhhotrcsSccsssscSsrswonygdldyyllhldclCliddwwodywDwdieetdttggLlBgsgggNhhtfftesteesflsfotffseekfsscmfgtwfftfttwsfffooegewoetfftlooothrtmmnlnnnnnggggbnndnnopoyyyyyyYYYyyyyyyyhhhhyyyYYyyfchyYYyYYyYyYyYYYyyyyYYyYyyyyYyyyyrrryyyyyyyYYYyyyyyyyyyyycyycyyyyrmmyyyyyttbyYyyyyyYyyyyyYymnrnbtdhrHHrdtdddddndnnhntDDtgmmeugsaourflafsoppoppor4ygpiueupmsteaAalelnomouueaaaaauasarsuaueeeumueeteoeeoiDiooooofftpbbtebKoaetaoooouoogoeeeuuauiiaaeealbBuaoeeeGGggiyochtttaueeuaduuauuuaafeaeuaaeeeauaeeuoaaeeuoOieuupFlorfrrubgtoaaouuaOoeaouoedpeiffcaaaegpuuououoooeuuuuuueueaaeooooooeeoeaiaeaaateooooouoereeeoeeeerstrtneeteeteetunawtdeuddeloaugpetneoorueurrauuouruuapeirrnkiitaniienomrirdtitoeoytteeetetultlelttmdesdeuegaoeellsdonutugseouteueedydneatouuuenuesmertaageaeeieofofeannusnoncaasatnehchsssssanaaaniiohnshiisStxrasohosnirrhnnesdlndiiiihmhfeddrenrredrerhoriaodreltnerreehshnurnysentlyeiookodiioiieeefoiiiiiiiiiiiireacannsoeeusfetnsshtsldsuuettetnenertrrusgeloneihfhywehhrfnphosassssssenhhueaaiaeoauInennioaeueeonrnraussssaneppnsonsaaaeooooogqooooosmmmomoooorqooooooooooqqoootoooooooooooooooooooooooffooooooooooblllfogoohnfykegddrgedxoLLooooooooooosoooooctoooooooooooooooftaaaaaoeoJJbjjjoooBooBboOoooooooooooooooggaaeeeoaEEeeaooeottttrrrrroltondaretsswtdtddeseeeeyseegaheuuguuuuuluuduterteuhrpgpoetooooooooooooeyuuuetooooooEEiieirbaukaanalnesdanleldlaraaaldaaaanlrrdtsrosssneoonrsFrtdrtgywseeweesedtyndhsnnhhpetdnhehnfoprgnddnenlaeddnnnneongshleanlnraueln\n";


// inverting burrows-wheeler transform
string inverse_bwt(const string& bwt)
{
	map<char, size_t> map2;
	vector <pair<char, size_t>> column2;

	// build array of bwt characters together with occurences in second column
	const char *c = bwt.c_str();
	while (*c != '\0')
	{
		if (map2.find(*c) == map2.end())
			map2[*c] = 1;
		else
			map2[*c] ++;

		column2.push_back({ *c, map2[*c] });
		++c;
	}

	map2.clear();

	// build first column (just sorted second column)
	auto column1 = column2;
	std::sort(begin(column1), end(column1), [](const pair<char, size_t> &a, const pair<char, size_t> &b) 
	{
		if (a.first == b.first)
			return a.second < b.second;
		else
			return a.first < b.first;
	});

	// build map of starting positions of first column
	map<char, size_t> map1;
	size_t j = 0;
	for (auto itr = begin(column1); itr != end(column1); ++itr, ++j)
	{
		if (map1.find(itr->first) == map1.end())
		{
			map1[itr->first] = j;
		}
	}

	size_t i = 0;

	string result;
	result.reserve(bwt.size());
	result += "$";

	// build the result string in reverse order
	while (result.size() < bwt.size())
	{
		auto rhs = column2[i];
		char symbol = rhs.first;
		size_t occurence = rhs.second;

		result += symbol;

		auto itr = map1.find(symbol);
		assert(itr != map1.end());
		i = itr->second + occurence - 1;

		assert(i < column2.size());
	}

	std::reverse(begin(result), end(result));

	return result;
}

void my_main(std::istream &in, std::ostream &out)
{
	string text;
	in >> text;
	out << inverse_bwt(text) << "\n";
}

int main()
{
	my_main(std::cin, std::cout);

	//auto Test = [](const string &input, const string &expected)
	//{
	//	stringstream in(input);
	//	stringstream out;
	//	my_main(in, out);
	//	string actual = out.str();
	//	assert(actual == expected);
	//};

	//Test("smnpbnnaaaaa$a", "panamabananas$\n");
	//Test("AC$A", "ACA$\n");
	//Test("AGGGAA$", "GAGAGA$\n");
	//Test("AA$", "AA$\n");
	//Test("CCCC$AAAA", "ACACACAC$\n");
	//Test("ATG$CAAA", "AGACATA$\n");
	//Test("glkiyhhvnottuxceuwdsrfmebepr$qjoooza", "thequickbrownfoxjumpsoverthelazydog$\n");
	////Test(nena_inverse, nena);
	////Test(seus_inverse, seus);

	return 0;
}
